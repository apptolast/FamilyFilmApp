name: Build and Deploy Android App

on:
  push:
    branches:
      - main

#  For testing the action manually it can be done executing:
#  gh run list --workflow=deploy.yml
#
#  workflow_dispatch:
#    inputs:
#      environment:
#        description: 'Environment to deploy to'
#        required: true
#        type: choice
#        options:
#          - release
#          - internal
#        default: release
#      branch:
#        description: 'Branch to deploy'
#        required: true
#        type: string
#        default: main

jobs:
  build_and_deploy:
    name: Deploy
    environment: release
    runs-on: ubuntu-latest
    steps:

      - name: Checkout
        uses: actions/checkout@v3

      - name: Restore Cache
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: 'adopt'

      - name: Decode google-services.json
        env:
          FIREBASE_JSON: ${{ secrets.FIREBASE_JSON }}
        run: echo $FIREBASE_JSON > app/google-services.json

      - name: Create local.properties
        run: |
          echo "WEB_ID_CLIENT=${{ secrets.WEB_ID_CLIENT }}" >> local.properties
          echo "TMDB_ACCESS_TOKEN=${{ secrets.TMDB_ACCESS_TOKEN }}" >> local.properties

      - name: Assemble
        run: ./gradlew assembleDebug bundleRelease

      # https://github.com/r0adkll/sign-android-release
      - name: Sign Release
        uses: r0adkll/sign-android-release@v1
        with:
          releaseDirectory: app/build/outputs/bundle/release
          signingKeyBase64: ${{ secrets.SIGNING_KEY_B64 }}
          alias:  ${{ secrets.SIGNING_ALIAS }}
          keyStorePassword: ${{ secrets.SIGNING_KEY_STORE_PASSWORD }}
          keyPassword:  ${{ secrets.SIGNING_KEY_PASSWORD }}

      # https://github.com/actions/upload-artifact
      - name: Upload APK
        uses: actions/upload-artifact@v4
        with:
          name: apks
          path: |
            app/build/outputs/bundle/**/*.aab
            app/build/outputs/apk/**/*.apk
            app/build/outputs/apk/
            app/release/*.aab
            app/release/*.apk

      # https://github.com/r0adkll/upload-google-play
      - name: Publish to Google Play Console
        uses: r0adkll/upload-google-play@v1
        with:
          serviceAccountJsonPlainText: ${{ secrets.SERVICE_ACCOUNT_GOOGLE_PLAY_CONSOLE_JSON }}
          packageName: com.apptolast.familyfilmapp
          releaseFiles: app/build/outputs/bundle/release/app-release.aab
          track: internal
          status: draft
          whatsNewDirectory: distribution/whatsnew
#          mappingFile: app/build/outputs/mapping/release/mapping.txt
        continue-on-error: true

      # https://github.com/marketplace/actions/firebase-app-distribution
      - name: Upload to Firebase App Distribution
        uses: wzieba/Firebase-Distribution-Github-Action@v1
        with:
          appId: ${{ secrets.FIREBASE_APP_ID }}
          serviceCredentialsFileContent: ${{ secrets.FIREBASE_SERVICE_ACCOUNT_FILE_CONTENT }}
          groups: devs
          debug: true
          file: app/build/outputs/apk/debug/app-debug.apk
